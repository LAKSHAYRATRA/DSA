class Solution {
    private:
    int minSum(vector<vector<int>>& triangle,int row,int col, int n,vector<int>&dp){
        dp[0]=triangle[0][0];
        vector<int>temp(dp.size());
        for(int i=1;i<=n;i++){
            for(int j=0;j<=i;j++){
                int prev1=INT_MAX;
                if(j!=i)prev1=dp[j];
                int prev2=INT_MAX;
                if(j!=0)prev2=dp[j-1];
                temp[j]=triangle[i][j]+min(prev1,prev2);
            }
            dp=temp;
        }
        int min_ans=INT_MAX;
        for(int i=0;i<=n;i++){
            min_ans=min(min_ans,dp[i]);
        }
        return min_ans;
    }
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n=triangle.size();
        vector<int>dp(n+1);
        return minSum(triangle,0,0,n-1,dp);
    }
};
