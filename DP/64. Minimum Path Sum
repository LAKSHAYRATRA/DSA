class Solution {
    private:
    int minSum(vector<vector<int>>&grid,int n,int m,vector<vector<int>>&dp){
        if(n==0&&m==0)return grid[0][0];
        if(n<0||m<0)return 80000;
        if(dp[n][m]!=-1)return dp[n][m];
        int left=grid[n][m]+minSum(grid,n-1,m,dp);
        int up=grid[n][m]+minSum(grid,n,m-1,dp);
        return dp[n][m]=min(left,up);
    }
public:
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return minSum(grid,n-1,m-1,dp);
    }
};
